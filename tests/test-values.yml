image:
  imagePullSecrets:
  - private-registry

initContainers: 
  - name: velero-plugin-for-aws
    image: registry1.dso.mil/ironbank/opensource/velero/velero-plugin-for-aws:v1.2.1
    imagePullPolicy: IfNotPresent
    volumeMounts:
      - mountPath: /target
        name: plugins
    resources:
      requests:
        memory: 512Mi
        cpu: 100m
      limits:
        memory: 512Mi
        cpu: 100m

configuration:
  # minio uses s3 provider
  provider: aws
  backupStorageLocation:
    bucket: velero
    config: &minio-config
      region: velero
      insecureSkipTLSVerify: "true"
      s3ForcePathStyle: "true"
      s3Url: &minio-address http://minio.minio.svc
  volumeSnapshotLocation:
    provider: aws
    config:
      region: velero

credentials:
  useSecret: true
  secretContents:
    cloud: |
      [default]
      aws_access_key_id = minio
      aws_secret_access_key = minio123

# Set a service account so that the CRD clean up job has proper permissions to delete CRDs
serviceAccount:
  server:
    name: velero

# Whether or not to clean up CustomResourceDefintions when deleting a release.
# Cleaning up CRDs will delete the BackupStorageLocation and VolumeSnapshotLocation instances, which would have to be reconfigured.
# Backup data in object storage will _not_ be deleted, however Backup instances in the Kubernetes API will.
# Always clean up CRDs in CI.
cleanUpCRDs: true

networkPolicies:
  enabled: true

bbtests:
  enabled: true
  scripts:
    image: registry1.dso.mil/ironbank/opensource/velero/velero:v1.6.3
    additionalVolumes:
      - name: transfer-kubectl
        emptyDir: {}
      - name: &yamlVolName yaml-configs
        configMap:
          name: "{{ .Chart.Name }}-backup-restore-files-config"
    additionalVolumeMounts:
      - name: transfer-kubectl
        mountPath: /usr/local/bin/kubectl
        subPath: kubectl
      - name: *yamlVolName
        mountPath: &yamlMountPath /yaml
    envs:
      MINIO_HOST: *minio-address
      TEST_YAML_DIR: *yamlMountPath
      MINIO_USER: minio
      MINIO_PASS: minio123
      NAMESPACE: velero
    #secretEnvs:
    #  - name: NAMESPACE
    #    valueFrom:
    #      fieldRef:
    #        fieldPath: metadata.namespace